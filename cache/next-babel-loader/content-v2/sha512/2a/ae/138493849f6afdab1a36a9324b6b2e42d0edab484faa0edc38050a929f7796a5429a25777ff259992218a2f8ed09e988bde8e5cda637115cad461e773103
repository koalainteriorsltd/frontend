{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n// get products\nexport var getProducts = function getProducts(products, category, type, limit) {\n  var finalProducts = category ? products.filter(function (product) {\n    return product.category.filter(function (single) {\n      return single === category;\n    })[0];\n  }) : products;\n\n  if (type && type === \"featured\") {\n    var featuredProducts = finalProducts.filter(function (single) {\n      return single.featured;\n    });\n    return featuredProducts.slice(0, limit ? limit : featuredProducts.length);\n  }\n\n  if (type && type === \"deal\") {\n    var dealProducts = finalProducts.filter(function (single) {\n      return single.dealEnd;\n    });\n    return dealProducts.slice(0, limit ? limit : dealProducts.length);\n  }\n\n  if (type && type === \"new\") {\n    var newProducts = finalProducts.filter(function (single) {\n      return single[\"new\"];\n    });\n    return newProducts.slice(0, limit ? limit : newProducts.length);\n  }\n\n  if (type && type === \"popular\") {\n    return finalProducts && finalProducts.sort(function (a, b) {\n      return b.saleCount - a.saleCount;\n    }).slice(0, limit ? limit : finalProducts.length);\n  }\n\n  if (type && type === \"topRated\") {\n    return finalProducts && finalProducts.sort(function (a, b) {\n      return b.rating - a.rating;\n    }).slice(0, limit ? limit : finalProducts.length);\n  }\n\n  if (type && type === \"sale\") {\n    var saleItems = finalProducts && finalProducts.filter(function (single) {\n      return single.discount && single.discount > 0;\n    });\n    return saleItems.slice(0, limit ? limit : saleItems.length);\n  }\n\n  return finalProducts && finalProducts.slice(0, limit ? limit : finalProducts.length);\n}; // get product discount price\n\nexport var getDiscountPrice = function getDiscountPrice(price, discount) {\n  return discount && discount > 0 ? (price - discount) / price * 100 : price;\n}; // get product cart quantity\n\nexport var getProductCartQuantity = function getProductCartQuantity(cartItems, product, color, size) {\n  var productInCart = cartItems.filter(function (single) {\n    return single.id === product.id && (single.selectedProductColor ? single.selectedProductColor === color : true) && (single.selectedProductSize ? single.selectedProductSize === size : true);\n  })[0];\n\n  if (cartItems.length >= 1 && productInCart) {\n    if (product.variation) {\n      return cartItems.filter(function (single) {\n        return single.id === product.id && single.selectedProductColor === color && single.selectedProductSize === size;\n      })[0].quantity;\n    } else {\n      return cartItems.filter(function (single) {\n        return product.id === single.id;\n      })[0].quantity;\n    }\n  } else {\n    return 0;\n  }\n}; //get products based on category\n\nexport var getSortedProducts = function getSortedProducts(products, sortType, sortValue) {\n  if (products && sortType && sortValue) {\n    if (sortType === \"category\") {\n      return products.filter(function (product) {\n        return product.category.filter(function (single) {\n          return single === sortValue;\n        })[0];\n      });\n    }\n\n    if (sortType === \"tag\") {\n      return products.filter(function (product) {\n        return product.tag.filter(function (single) {\n          return single === sortValue;\n        })[0];\n      });\n    }\n\n    if (sortType === \"color\") {\n      return products.filter(function (product) {\n        return product.variation && product.variation.filter(function (single) {\n          return single.color === sortValue;\n        })[0];\n      });\n    }\n\n    if (sortType === \"size\") {\n      return products.filter(function (product) {\n        return product.variation && product.variation.filter(function (single) {\n          return single.size.filter(function (single) {\n            return single.name === sortValue;\n          })[0];\n        })[0];\n      });\n    }\n\n    if (sortType === \"filterSort\") {\n      var sortProducts = _toConsumableArray(products);\n\n      if (sortValue === \"default\") {\n        return sortProducts;\n      }\n\n      if (sortValue === \"priceHighToLow\") {\n        return sortProducts.sort(function (a, b) {\n          return b.price - a.price;\n        });\n      }\n\n      if (sortValue === \"priceLowToHigh\") {\n        return sortProducts.sort(function (a, b) {\n          return a.price - b.price;\n        });\n      }\n\n      if (sortType === \"AscAlpha\") {\n        return sortProducts.sort(function (a, b) {\n          a.name - b.name;\n        });\n      }\n\n      if (sortType === \"DscAlpha\") {\n        return sortProducts.sort(function (a, b) {\n          return b.name - a.name;\n        });\n      }\n    }\n  }\n\n  return products;\n}; // get individual element\n\nvar getIndividualItemArray = function getIndividualItemArray(array) {\n  var individualItemArray = array.filter(function (v, i, self) {\n    return i === self.indexOf(v);\n  });\n  return individualItemArray;\n}; // get individual element object\n\n\nvar getIndividualColorObjectArray = function getIndividualColorObjectArray(array) {\n  var individualObjectArray = array.filter(function (v, i, self) {\n    return i === self.findIndex(function (t) {\n      return t.colorName === v.colorName && t.colorCode === v.colorCode;\n    });\n  });\n  return individualObjectArray;\n}; // get individual categories\n\n\nexport var getIndividualCategories = function getIndividualCategories(products) {\n  var productCategories = [];\n  products && products.map(function (product) {\n    return product.category && product.category.map(function (single) {\n      return productCategories.push(single);\n    });\n  });\n  var individualProductCategories = [];\n  var obj = {};\n  var newArr = [];\n\n  function countItems(productCategories, val) {\n    var count = 0,\n        i;\n\n    while ((i = productCategories.indexOf(val, i)) != -1) {\n      ++count;\n      ++i;\n    }\n\n    return count;\n  }\n\n  productCategories.forEach(function (item) {\n    var count = countItems(productCategories, item);\n    var objValues = Object.values(obj);\n    newArr.push(objValues[0]);\n    if (newArr.indexOf(item) !== -1) return;\n    obj = {\n      name: item,\n      count: count\n    };\n    individualProductCategories.push(obj);\n  });\n  return individualProductCategories;\n}; // get individual tags\n\nexport var getIndividualTags = function getIndividualTags(products) {\n  var productTags = [];\n  products && products.map(function (product) {\n    return product.tag && product.tag.map(function (single) {\n      return productTags.push(single);\n    });\n  });\n  var individualProductTags = getIndividualItemArray(productTags);\n  return individualProductTags;\n}; // get individual colors\n\nexport var getIndividualColors = function getIndividualColors(products) {\n  var productColors = [];\n  products && products.map(function (product) {\n    return product.variation && product.variation.map(function (single) {\n      return productColors.push({\n        colorName: single.color,\n        colorCode: single.colorCode\n      });\n    });\n  });\n  var individualProductColors = getIndividualColorObjectArray(productColors);\n  return individualProductColors;\n}; // get individual sizes\n\nexport var getProductsIndividualSizes = function getProductsIndividualSizes(products) {\n  var productSizes = [];\n  products && products.map(function (product) {\n    return product.variation && product.variation.map(function (single) {\n      return single.size.map(function (single) {\n        return productSizes.push(single.name);\n      });\n    });\n  });\n  var individualProductSizes = getIndividualItemArray(productSizes);\n  return individualProductSizes;\n}; // get product individual sizes\n\nexport var getIndividualSizes = function getIndividualSizes(product) {\n  var productSizes = [];\n  product.variation && product.variation.map(function (singleVariation) {\n    return singleVariation.size && singleVariation.size.map(function (singleSize) {\n      return productSizes.push(singleSize.name);\n    });\n  });\n  var individualSizes = getIndividualItemArray(productSizes);\n  return individualSizes;\n};\nexport var setActiveSort = function setActiveSort(e) {\n  var filterButtons = document.querySelectorAll(\".widget__categories button, .widget__sizes button, .widget__colors button, .widget__tags button\");\n  filterButtons.forEach(function (item) {\n    item.classList.remove(\"active\");\n  });\n  e.currentTarget.classList.add(\"active\");\n};\nexport var setActiveLayout = function setActiveLayout(e) {\n  var gridSwitchBtn = document.querySelectorAll(\".products-view button\");\n  gridSwitchBtn.forEach(function (item) {\n    item.classList.remove(\"active\");\n  });\n  e.currentTarget.classList.add(\"active\");\n};","map":null,"metadata":{},"sourceType":"module"}
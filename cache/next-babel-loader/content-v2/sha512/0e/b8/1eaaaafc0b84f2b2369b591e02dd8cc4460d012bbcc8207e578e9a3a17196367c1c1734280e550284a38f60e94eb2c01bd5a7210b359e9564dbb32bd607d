{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment } from \"react\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { IoIosClose } from \"react-icons/io\";\nimport { BreadcrumbOne } from \"../../components/Breadcrumb\";\nimport { deleteFromCompare } from \"../../redux/actions/compareActions\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport { ProductRating } from \"../../components/Product\";\nimport { getDiscountPrice } from \"../../lib/product\";\nimport { LayoutOne } from \"../../layouts\";\n\nconst Compare = ({\n  cartItems,\n  compareItems,\n  addToCart,\n  deleteFromCompare\n}) => {\n  const {\n    addToast\n  } = useToasts();\n  return __jsx(LayoutOne, null, __jsx(BreadcrumbOne, {\n    pageTitle: \"Compare\"\n  }, __jsx(\"ol\", {\n    className: \"breadcrumb justify-content-md-end\"\n  }, __jsx(\"li\", {\n    className: \"breadcrumb-item\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"Home\"))), __jsx(\"li\", {\n    className: \"breadcrumb-item active\"\n  }, \"Compare\"))), __jsx(\"div\", {\n    className: \"compare-content space-pt--r100 space-pb--r100\"\n  }, __jsx(Container, null, compareItems && compareItems.length >= 1 ? __jsx(Row, null, __jsx(Col, null, __jsx(\"div\", {\n    className: \"compare-box\"\n  }, __jsx(\"div\", {\n    className: \"table-responsive\"\n  }, __jsx(\"table\", {\n    className: \"table table-bordered text-center\"\n  }, __jsx(\"tbody\", null, __jsx(\"tr\", {\n    className: \"pr_image\"\n  }, __jsx(\"td\", {\n    className: \"row-title\"\n  }, \"Product Image\"), compareItems.map((product, key) => {\n    return __jsx(\"td\", {\n      className: \"row_img\",\n      key: key\n    }, __jsx(\"img\", {\n      src: product.thumbImage[0],\n      alt: \"compare-img\"\n    }));\n  })), __jsx(\"tr\", {\n    className: \"pr_title\"\n  }, __jsx(\"td\", {\n    className: \"row-title\"\n  }, \"Product Name\"), compareItems.map((product, key) => {\n    return __jsx(\"td\", {\n      className: \"product-name\",\n      key: key\n    }, __jsx(Link, {\n      href: `/shop/product-basic/[slug]?slug=${product.slug}`,\n      as: `/shop/product-basic/${product.slug}`\n    }, __jsx(\"a\", null, product.name)));\n  })), __jsx(\"tr\", {\n    className: \"pr-price\"\n  }, __jsx(\"td\", {\n    className: \"row-title\"\n  }, \"Price\"), compareItems.map((product, key) => {\n    const discountedPrice = getDiscountPrice(product.price, product.discount).toFixed(2);\n    const productPrice = product.price.toFixed(2);\n    return __jsx(\"td\", {\n      className: \"product-price\",\n      key: key\n    }, product.discount ? __jsx(Fragment, null, __jsx(\"span\", {\n      className: \"price\"\n    }, \"$\", discountedPrice), __jsx(\"del\", null, \"$\", productPrice)) : __jsx(\"span\", {\n      className: \"price\"\n    }, \"$\", productPrice));\n  })), __jsx(\"tr\", {\n    className: \"pr-rating\"\n  }, __jsx(\"td\", {\n    className: \"row-title\"\n  }, \"Rating\"), compareItems.map((product, key) => {\n    return __jsx(\"td\", {\n      key: key\n    }, __jsx(\"div\", {\n      className: \"rating-wrap\"\n    }, __jsx(ProductRating, {\n      ratingValue: product.rating\n    }), __jsx(\"span\", {\n      className: \"rating-num\"\n    }, \"(\", product.ratingCount, \")\")));\n  })), __jsx(\"tr\", {\n    className: \"pr_add_to_cart\"\n  }, __jsx(\"td\", {\n    className: \"row-title\"\n  }, \"Add To Cart\"), compareItems.map((product, key) => {\n    const cartItem = cartItems.filter(item => item.id === product.id)[0];\n    return __jsx(\"td\", {\n      className: \"row_btn\",\n      key: key\n    }, product.affiliateLink ? __jsx(\"a\", {\n      href: product.affiliateLink,\n      target: \"_blank\",\n      className: \"btn btn-fill-out\"\n    }, \"Buy now\") : product.variation && product.variation.length >= 1 ? __jsx(Link, {\n      href: `/shop/product-basic/[slug]?slug=${product.slug}`,\n      as: `/shop/product-basic/${product.slug}`\n    }, __jsx(\"a\", {\n      className: \"btn btn-fill-out\"\n    }, \"Select option\")) : product.stock && product.stock > 0 ? __jsx(\"button\", {\n      onClick: () => addToCart(product, addToast),\n      className: ` btn btn-fill-out ${cartItem !== undefined && cartItem.quantity > 0 ? \"active\" : \"\"} `,\n      disabled: cartItem !== undefined && cartItem.quantity > 0,\n      title: product !== undefined ? \"Added to cart\" : \"Add to cart\"\n    }, cartItem !== undefined && cartItem.quantity > 0 ? \"Added\" : \"Add to cart\") : __jsx(\"button\", {\n      disabled: true,\n      className: \"btn btn-fill-out\"\n    }, \"Out of stock\"));\n  })), __jsx(\"tr\", {\n    className: \"description\"\n  }, __jsx(\"td\", {\n    className: \"row-title\"\n  }, \"Description\"), compareItems.map((product, key) => {\n    return __jsx(\"td\", {\n      className: \"row-text\",\n      key: key\n    }, __jsx(\"p\", null, product.shortDescription, \" \"));\n  })), __jsx(\"tr\", {\n    className: \"pr-remove\"\n  }, __jsx(\"td\", {\n    className: \"row-title\"\n  }), compareItems.map((product, key) => {\n    return __jsx(\"td\", {\n      className: \"row-remove\",\n      key: key\n    }, __jsx(\"button\", {\n      onClick: () => deleteFromCompare(product, addToast)\n    }, __jsx(IoIosClose, null)));\n  })))))))) : __jsx(Row, null, __jsx(Col, null, __jsx(\"div\", {\n    className: \"item-empty-area text-center\"\n  }, __jsx(\"div\", {\n    className: \"item-empty-area__icon space-mb--30\"\n  }, __jsx(\"i\", {\n    className: \"icon-shuffle\"\n  })), __jsx(\"div\", {\n    className: \"item-empty-area__text\"\n  }, __jsx(\"p\", {\n    className: \"space-mb--30\"\n  }, \"No items found in compare\"), __jsx(Link, {\n    href: \"/shop/grid-left-sidebar\"\n  }, __jsx(\"a\", {\n    className: \"btn btn-fill-out\"\n  }, \"Add Some\")))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartData,\n    compareItems: state.compareData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: (item, addToast, quantityCount) => {\n      dispatch(addToCart(item, addToast, quantityCount));\n    },\n    deleteFromCompare: (item, addToast) => {\n      dispatch(deleteFromCompare(item, addToast));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Compare);","map":null,"metadata":{},"sourceType":"module"}
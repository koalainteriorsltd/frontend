{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { OrderFetchCalls, OrderUpdateCalls } from '../../services/api/fetchCalls/OrderFetchcalls';\n\nvar CheckoutForm = function CheckoutForm(_ref) {\n  var address = _ref.address,\n      orderProducts = _ref.orderProducts;\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n              data = {\n                \"payment_method\": \"bacs\",\n                \"payment_method_title\": \"Debit Card\",\n                \"set_paid\": false,\n                \"shipping\": address,\n                \"billing\": address,\n                \"line_items\": orderProducts\n              }; //order place\n\n              _context3.next = 4;\n              return OrderFetchCalls(data).then( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n                  var _yield$stripe$createP, error, paymentMethod, id, description;\n\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.next = 2;\n                          return stripe.createPaymentMethod({\n                            type: \"card\",\n                            card: elements.getElement(CardElement)\n                          });\n\n                        case 2:\n                          _yield$stripe$createP = _context2.sent;\n                          error = _yield$stripe$createP.error;\n                          paymentMethod = _yield$stripe$createP.paymentMethod;\n\n                          if (!error) {\n                            id = paymentMethod.id;\n\n                            try {\n                              console.log(data, \"paymentmethod\");\n                              description = data.line_items.map(function (item) {\n                                return item.name;\n                              });\n                              axios.post(\"/api/payment/charge\", {\n                                id: id,\n                                amount: parseInt(data.total * 100),\n                                description: description.toString()\n                              }).then( /*#__PURE__*/function () {\n                                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ordered) {\n                                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                                    while (1) {\n                                      switch (_context.prev = _context.next) {\n                                        case 0:\n                                          _context.next = 2;\n                                          return OrderUpdateCalls(data.id, {\n                                            \"status\": \"completed\"\n                                          }).then(function (updated) {\n                                            console.log(updated, \"updated data\");\n                                          });\n\n                                        case 2:\n                                        case \"end\":\n                                          return _context.stop();\n                                      }\n                                    }\n                                  }, _callee);\n                                }));\n\n                                return function (_x3) {\n                                  return _ref4.apply(this, arguments);\n                                };\n                              }())[\"catch\"](function (error) {\n                                console.log(error, \"error\");\n                              });\n                            } catch (error) {\n                              console.log(error, \"error\");\n                            }\n                          }\n\n                        case 6:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }(), function (errors) {\n                alert(errors);\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useState = useState(true),\n      agree = _useState[0],\n      setAgree = _useState[1];\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(CardElement, null), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, __jsx(\"input\", {\n    type: \"checkbox\",\n    onChange: function onChange() {\n      setAgree(false);\n    }\n  }), \"\\xA0 I confirm I have read and accept Koala Interiors Limited terms and conditions and \", __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", {\n    style: {\n      color: \"blue\"\n    }\n  }, \"terms and conditions\")), \" returns policy\")), __jsx(\"button\", {\n    disabled: agree,\n    className: \"btn btn-fill-out btn-block\"\n  }, \"Place Order\"));\n};\n\nvar stripePromise = loadStripe(\"pk_test_51IQXdrDbGNdhZzB0FBALDBzViafiz3A99smpVcoD4BSKGdm6XFM9vqrbN3NLhy2KGaKA79dLV8srZB9WDVoRGeY700VyS5E8MF\");\n\nvar MyStoreCheckout = function MyStoreCheckout(_ref5) {\n  var address = _ref5.address,\n      orderProducts = _ref5.orderProducts;\n  return __jsx(Elements, {\n    stripe: stripePromise\n  }, __jsx(CheckoutForm, {\n    address: address,\n    orderProducts: orderProducts\n  }));\n};\n\nexport default MyStoreCheckout;","map":null,"metadata":{},"sourceType":"module"}
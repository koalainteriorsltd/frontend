{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from \"next/link\";\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { getDiscountPrice } from \"../../lib/product\";\nimport { IoMdCash } from \"react-icons/io\";\nimport { SubLayout } from \"../../layouts\";\nimport { BreadcrumbOne } from \"../../components/Breadcrumb\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport { OrderFetchCalls } from '../../services/api/fetchCalls/OrderFetchcalls';\nimport MyStoreCheckout from '../../components/Payment/MyStoreCheckout';\n\nconst Checkout1 = ({\n  cartItems\n}) => {\n  const router = useRouter();\n  let cartTotalPrice = 0;\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  const {\n    0: agreeChecked,\n    1: setAgreeChecked\n  } = useState(false);\n  const {\n    0: checkTag,\n    1: setCheckTag\n  } = useState(\"\");\n  const {\n    register,\n    getValues,\n    errors,\n    setValue\n  } = useForm({\n    shouldUnregister: false\n  });\n  const {\n    0: address,\n    1: setBillingAddress\n  } = useState({\n    first_name: \"\",\n    last_name: \"\",\n    company: \"\",\n    address1: \"\",\n    address2: \"\",\n    city: \"\",\n    postcode: \"\",\n    phone: \"\"\n  });\n  const {\n    0: shippingAddress,\n    1: setShippingAddress\n  } = useState({\n    first_name: \"\",\n    last_name: \"\",\n    company: \"\",\n    address1: \"\",\n    address2: \"\",\n    city: \"\",\n    postcode: \"\",\n    phone: \"\"\n  }); // const [address, setAddress] = useState({billingAddress, shippingAddress});\n\n  var orderProducts = [];\n\n  if (cartItems && cartItems.length > 0) {\n    cartItems.map(element => {\n      orderProducts.push({\n        \"product_id\": element.id,\n        \"quantity\": element.quantity\n      });\n    });\n  }\n\n  const shippingChange = () => {\n    if (checked == true) {\n      setChecked(false);\n    } else {\n      setChecked(true);\n    }\n  };\n\n  console.log(cartItems, \"cartitem\");\n  const cartShipID = cartItems.map(element => {\n    if (element.shipping_required = true) {\n      return element.shipping_class_id;\n    }\n  });\n  var shippingPirce = [];\n  cartItems.map(data => {\n    if (data.method_id === \"free_shipping\") {\n      shippingPirce.push(0);\n    }\n\n    if (data.method_id === \"flat_rate\") {\n      cartShipID.forEach(id => {\n        for (const property in data.settings) {\n          if (property == `class_cost_${id}`) {\n            console.log(data.settings[property].value, \"shippingData\");\n            shippingPirce.push(data.settings[property].value);\n          }\n        }\n      });\n    }\n  });\n\n  Array.prototype.max = function () {\n    return Math.max.apply(null, this);\n  };\n\n  return __jsx(SubLayout, null, __jsx(BreadcrumbOne, {\n    pageTitle: \"Checkout\"\n  }), __jsx(\"div\", {\n    className: \"checkout-content space-pt--r70 space-pb--r100\"\n  }, __jsx(Container, null, cartItems && cartItems.length >= 1 ? __jsx(Row, null, __jsx(Col, {\n    md: 6\n  }, __jsx(\"form\", null, __jsx(Row, null, __jsx(Col, {\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"heading-s1 space-mb--20\"\n  }, __jsx(\"h4\", {\n    style: {\n      color: 'black'\n    }\n  }, \"Billing Details\"))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"first_name\",\n    placeholder: \"First name *\",\n    required: true,\n    onChange: e => {\n      setBillingAddress(_objectSpread(_objectSpread({}, address), {}, {\n        first_name: e.target.value\n      }));\n    }\n  }))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"last_name\",\n    placeholder: \"Last name *\",\n    id: \"billing_last_name\",\n    required: true,\n    onChange: e => {\n      setBillingAddress(_objectSpread(_objectSpread({}, address), {}, {\n        last_name: e.target.value\n      }));\n    }\n  }))), __jsx(Col, {\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"company\",\n    placeholder: \"Company Name\",\n    id: \"billing_company_name\",\n    required: true,\n    onChange: e => {\n      setBillingAddress(_objectSpread(_objectSpread({}, address), {}, {\n        company: e.target.value\n      }));\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"baddress1\",\n    placeholder: \"Address *\",\n    id: \"billing_address\",\n    required: true,\n    onChange: e => {\n      setBillingAddress(_objectSpread(_objectSpread({}, address), {}, {\n        address1: e.target.value\n      }));\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"address2\",\n    placeholder: \"Address line2\",\n    id: \"billing_address2\",\n    required: true,\n    onChange: e => {\n      setBillingAddress(_objectSpread(_objectSpread({}, address), {}, {\n        address2: e.target.value\n      }));\n    }\n  }))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"city\",\n    placeholder: \"City / Town *\",\n    id: \"billing_city\",\n    required: true,\n    onChange: e => {\n      setBillingAddress(_objectSpread(_objectSpread({}, address), {}, {\n        city: e.target.value\n      }));\n    }\n  }))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"postcode\",\n    placeholder: \"Postcode / ZIP *\",\n    id: \"billing_postcode\",\n    required: true,\n    onChange: e => {\n      setBillingAddress(_objectSpread(_objectSpread({}, address), {}, {\n        postcode: e.target.value\n      }));\n    }\n  }))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"phone\",\n    placeholder: \"Phone *\",\n    id: \"billing_phone\",\n    required: true,\n    onChange: e => {\n      setBillingAddress(_objectSpread(_objectSpread({}, address), {}, {\n        phone: e.target.value\n      }));\n    }\n  }))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email address *\",\n    id: \"billing_email\",\n    onChange: e => {\n      setBillingAddress(_objectSpread(_objectSpread({}, address), {}, {\n        email: e.target.value\n      }));\n    }\n  }))), __jsx(Col, {\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"heading-s1 space-mb--20\"\n  }, __jsx(\"h4\", {\n    style: {\n      color: 'black'\n    }\n  }, \"Additional information\")), __jsx(\"div\", {\n    className: \"form-group mb-0\"\n  }, __jsx(\"textarea\", {\n    rows: \"5\",\n    className: \"form-control\",\n    placeholder: \"Order notes\"\n  })))))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"order-review space-mt-mobile-only--40\"\n  }, __jsx(\"div\", {\n    className: \"heading-s1 space-mb--20\"\n  }, __jsx(\"h4\", {\n    style: {\n      color: 'black'\n    }\n  }, \"Your Orders\")), __jsx(\"div\", {\n    className: \"table-responsive order_table\"\n  }, __jsx(\"table\", {\n    className: \"table\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Product\"), __jsx(\"th\", null, \"Total\"))), __jsx(\"tbody\", null, cartItems.map((product, i) => {\n    // const discountedPrice = getDiscountPrice(\n    //   product.regular_price,\n    //   product.price\n    // ).toFixed(2);\n    const discountedPrice = product.price;\n    cartTotalPrice += discountedPrice * product.quantity;\n    return __jsx(\"tr\", {\n      key: i\n    }, __jsx(\"td\", null, product.name, \" \", __jsx(\"span\", {\n      className: \"product-qty\"\n    }, \"x \", product.quantity)), __jsx(\"td\", null, \"\\xA3\", (discountedPrice * product.quantity).toFixed(2)));\n  })), __jsx(\"tfoot\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"SubTotal\"), __jsx(\"td\", {\n    className: \"product-subtotal\"\n  }, \"\\xA3 \", cartTotalPrice.toFixed(2))), __jsx(\"tr\", null, __jsx(\"th\", null, \"Shipping\"), __jsx(\"td\", null, \"\\xA3 \", shippingPirce.max())), __jsx(\"tr\", null, __jsx(\"th\", null, \"Total\"), __jsx(\"td\", {\n    className: \"product-subtotal\"\n  }, \"\\xA3 \", cartTotalPrice.toFixed(2)))))), __jsx(\"div\", {\n    className: \"heading-s1 space-mb--40\"\n  }, __jsx(\"h4\", {\n    style: {\n      color: 'black'\n    }\n  }, \"Payment\")), __jsx(\"div\", {\n    className: \"payment-option space-mb--40\"\n  }, __jsx(\"div\", {\n    className: \"custom-radio space-mb--40\"\n  }, __jsx(\"label\", {\n    className: \"form-check-label\"\n  }, \"Credit / Debit Card\"), __jsx(MyStoreCheckout, {\n    address: address,\n    orderProducts: orderProducts\n  })))))) : __jsx(Row, null, __jsx(Col, null, __jsx(\"div\", {\n    className: \"item-empty-area text-center\"\n  }, __jsx(\"div\", {\n    className: \"item-empty-area__icon space-mb--30\"\n  }, __jsx(IoMdCash, null)), __jsx(\"div\", {\n    className: \"item-empty-area__text\"\n  }, __jsx(\"p\", {\n    className: \"space-mb--30\"\n  }, \"No items found in cart to checkout\"), __jsx(Link, {\n    href: \"/shop/grid-left-sidebar\"\n  }, __jsx(\"a\", {\n    className: \"btn btn-fill-out\"\n  }, \"Shop Now\")))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartData\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout1);","map":null,"metadata":{},"sourceType":"module"}
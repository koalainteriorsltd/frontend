{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Paginator from \"react-hooks-paginator\";\nimport { LayoutOne } from \"../../../layouts\";\nimport { BreadcrumbOne } from \"../../../components/Breadcrumb\";\nimport { CategoryGrid } from \"../../../components/ProductThumb\";\nimport { CategoryProducts, ProductFetchCalls, ProductCategoryFetchCalls } from '../../../services/api/fetchCalls/ProductFetchCalls';\nimport { Sidebar, ShopHeader, ShopProducts } from \"../../../components/Shop\";\nimport { getSortedProducts } from \"../../../lib/product\";\nimport { useToasts } from \"react-toast-notifications\";\nexport async function getStaticPaths() {\n  const data = await ProductFetchCalls();\n  const paths = data === null || data === void 0 ? void 0 : data.map(d => {\n    return {\n      params: {\n        id: d.slug.toString()\n      }\n    };\n  });\n  return {\n    paths: paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const slug = context.params.slug;\n  const data = await CategoryProducts(slug);\n  const roomMenu = await ProductCategoryFetchCalls(76);\n  const productMenu = await ProductCategoryFetchCalls(17);\n  return {\n    props: {\n      products: data,\n      productData: {\n        productMenu,\n        roomMenu\n      }\n    }\n  };\n}\n\nconst Category = ({\n  products,\n  productData\n}) => {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: state,\n    1: setState\n  } = useState(\"high_to_low\");\n  const {\n    0: list,\n    1: setList\n  } = useState(\"\");\n  const {\n    0: layoutOne,\n    1: setLayout\n  } = useState(\"list\");\n  const {\n    0: sortType,\n    1: setSortType\n  } = useState(\"\");\n  const {\n    0: sortValue,\n    1: setSortValue\n  } = useState(\"\");\n  const {\n    0: filterSortType,\n    1: setFilterSortType\n  } = useState(\"\");\n  const {\n    0: filterSortValue,\n    1: setFilterSortValue\n  } = useState(\"\");\n  const {\n    0: offset,\n    1: setOffset\n  } = useState(0);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: currentData,\n    1: setCurrentData\n  } = useState([]);\n  const {\n    0: sortedProducts,\n    1: setSortedProducts\n  } = useState([]);\n  const {\n    0: shopTopFilterStatus,\n    1: setShopTopFilterStatus\n  } = useState(false);\n  const pageLimit = 12;\n\n  const getFilterSortParams = (sortType, sortValue) => {\n    setFilterSortType(sortType);\n    setFilterSortValue(sortValue);\n  };\n\n  useEffect(() => {\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\n    const filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\n    sortedProducts = filterSortedProducts;\n    setSortedProducts(sortedProducts);\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\n  return __jsx(React.Fragment, null, __jsx(LayoutOne, {\n    productData: productData\n  }, __jsx(Container, null, __jsx(BreadcrumbOne, {\n    pageTitle: products[0].categories[0] ? products[0].categories[0].name : \"Products\"\n  }, __jsx(\"ol\", {\n    className: \"breadcrumb justify-content-md-end\"\n  }, __jsx(\"li\", {\n    className: \"breadcrumb-item\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"Home\"))), __jsx(\"li\", {\n    className: \"breadcrumb-item active\"\n  }, products[0].categories[0] ? products[0].categories[0].name : \"Products\")))), __jsx(\"div\", {\n    className: \"shop-content space-pt--r70 space-pb--r70\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    lg: 12\n  }, __jsx(ShopHeader, {\n    getFilterSortParams: getFilterSortParams,\n    shopTopFilterStatus: shopTopFilterStatus,\n    setShopTopFilterStatus: setShopTopFilterStatus,\n    layout: \"grid\"\n  }), list, __jsx(CategoryGrid, {\n    products: currentData\n  }), __jsx(\"div\", {\n    className: \"pagination pagination-style pagination-style--two justify-content-center\"\n  }, __jsx(Paginator, {\n    totalRecords: sortedProducts.length,\n    pageLimit: pageLimit,\n    pageNeighbours: 2,\n    setOffset: setOffset,\n    currentPage: currentPage,\n    setCurrentPage: setCurrentPage,\n    pageContainerClass: \"mb-0 mt-0\",\n    pagePrevText: \"\\xAB\",\n    pageNextText: \"\\xBB\"\n  }))))))));\n};\n\nexport default Category;","map":null,"metadata":{},"sourceType":"module"}
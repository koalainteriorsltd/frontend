{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { getDiscountPrice } from \"../../lib/product\";\nimport { IoMdCash } from \"react-icons/io\";\nimport { LayoutOne } from \"../../layouts\";\nimport { BreadcrumbOne } from \"../../components/Breadcrumb\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport { OrderFetchCalls } from '../../services/api/fetchCalls/OrderFetchcalls';\nimport { ProductCategoryFetchCalls } from '../../services/api/fetchCalls/ProductFetchCalls';\nimport MyStoreCheckout from '../../components/Payment/MyStoreCheckout';\n\nconst Checkout = ({\n  productData,\n  cartItems\n}) => {\n  const router = useRouter();\n  let cartTotalPrice = 0;\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  const {\n    0: agreeChecked,\n    1: setAgreeChecked\n  } = useState(false);\n  const {\n    0: checkTag,\n    1: setCheckTag\n  } = useState(\"\");\n  const formik = useFormik({\n    initialValues: {},\n    onSubmit: async values => {\n      var orderProducts = null;\n      var shippingAddress = null;\n\n      if (cartItems && cartItems.length > 0) {\n        cartItems.map(element => {\n          orderProducts = {\n            \"line_items\": [{\n              \"product_id\": element.id,\n              \"quantity\": element.quantity\n            }]\n          };\n        });\n\n        if (checked == true) {\n          shippingAddress = {\n            \"first_name\": values.bfname,\n            \"last_name\": values.blname,\n            \"address_1\": values.baddress1,\n            \"address_2\": values.baddress2,\n            \"city\": values.bcity,\n            \"state\": \"\",\n            \"postcode\": values.bzipcode,\n            \"country\": \"UK\",\n            \"email\": values.bemail,\n            \"phone\": values.bphone\n          };\n        } else if (checked == false) {\n          shippingAddress = {\n            \"first_name\": values.sfname,\n            \"last_name\": values.slname,\n            \"address_1\": values.saddress1,\n            \"address_2\": values.saddress2,\n            \"city\": values.scity,\n            \"state\": \"\",\n            \"postcode\": values.szipcode,\n            \"country\": \"UK\",\n            \"email\": values.semail,\n            \"phone\": values.sphone\n          };\n        }\n\n        var data = {\n          \"payment_method\": \"bacs\",\n          \"payment_method_title\": \"Debit Card\",\n          \"set_paid\": false,\n          \"billing\": {\n            \"first_name\": values.bfname,\n            \"last_name\": values.blname,\n            \"address_1\": values.baddress1,\n            \"address_2\": values.baddress2,\n            \"city\": values.bcity,\n            \"state\": \"\",\n            \"postcode\": values.bzipcode,\n            \"country\": \"UK\",\n            \"email\": values.bemail,\n            \"phone\": values.bphone\n          },\n          \"shipping\": shippingAddress,\n          \"line_items\": orderProducts.line_items\n        };\n      }\n\n      console.log(data, \"dadfadsfasd\");\n      await OrderFetchCalls(data).then(data => {\n        alert(JSON.stringify(data, null, 2));\n        router.push('/other/order-completed');\n      }, errors => {\n        alert(errors);\n      });\n    }\n  });\n\n  const shippingChange = () => {\n    if (checked == true) {\n      setChecked(false);\n    } else {\n      setChecked(true);\n    }\n  };\n\n  const orderAgree = () => {\n    if (agreeChecked == true) {\n      setAgreeChecked(false);\n    } else {\n      setAgreeChecked(true);\n    }\n  };\n\n  const {\n    0: product,\n    1: setProduct\n  } = useState({\n    name: \"Product 1\",\n    price: 2000 * 100,\n    productBy: \"Vijay Shop\"\n  });\n  useEffect(() => {\n    if (checked == false) {\n      setCheckTag(__jsx(React.Fragment, null, __jsx(\"hr\", null), __jsx(Row, null, __jsx(Col, {\n        md: 12\n      }, __jsx(\"div\", {\n        className: \"heading-s1 space-mb--20\"\n      }, __jsx(\"h4\", {\n        style: {\n          color: 'black'\n        }\n      }, \"Shipping Address\"))), __jsx(Col, {\n        md: 6\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        name: \"sfname\",\n        placeholder: \"First name *\",\n        id: \"shipping_first_name\",\n        onChange: formik.handleChange\n      }))), __jsx(Col, {\n        md: 6\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        name: \"slname\",\n        placeholder: \"Last name *\",\n        id: \"shipping_last_name\",\n        onChange: formik.handleChange\n      }))), __jsx(Col, {\n        md: 12\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        required: true,\n        type: \"text\",\n        name: \"scname\",\n        placeholder: \"Company Name\",\n        id: \"shipping_company_name\",\n        onChange: formik.handleChange\n      })), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"saddress1\",\n        required: \"\",\n        placeholder: \"Address *\",\n        id: \"shipping_address\",\n        onChange: formik.handleChange\n      })), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"saddress2\",\n        required: \"\",\n        placeholder: \"Address line2\",\n        id: \"shipping_address2\",\n        onChange: formik.handleChange\n      }))), __jsx(Col, {\n        md: 6\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        required: true,\n        type: \"text\",\n        name: \"scity\",\n        placeholder: \"City / Town *\",\n        id: \"shipping_city\",\n        onChange: formik.handleChange\n      }))), __jsx(Col, {\n        md: 6\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        required: true,\n        type: \"text\",\n        name: \"szipcode\",\n        placeholder: \"Postcode / ZIP *\",\n        id: \"shipping_postcode\",\n        onChange: formik.handleChange\n      }))), __jsx(Col, {\n        md: 6\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        required: true,\n        type: \"text\",\n        name: \"sphone\",\n        placeholder: \"Phone *\",\n        id: \"shipping_phone\",\n        onChange: formik.handleChange\n      }))), __jsx(Col, {\n        md: 6\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        required: true,\n        type: \"text\",\n        name: \"semail\",\n        placeholder: \"Email address *\",\n        id: \"shipping_email\",\n        onChange: formik.handleChange\n      }))))));\n    } else {\n      setCheckTag(\"\");\n    }\n  }, [checked]);\n  return __jsx(LayoutOne, {\n    productData: productData\n  }, __jsx(BreadcrumbOne, {\n    pageTitle: \"Checkout\"\n  }), __jsx(\"div\", {\n    className: \"checkout-content space-pt--r70 space-pb--r100\"\n  }, __jsx(Container, null, cartItems && cartItems.length >= 1 ? __jsx(Row, null, __jsx(Col, {\n    md: 6\n  }, __jsx(\"form\", {\n    onSubmit: formik.handleSubmit\n  }, __jsx(Row, null, __jsx(Col, {\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"heading-s1 space-mb--20\"\n  }, __jsx(\"h4\", {\n    style: {\n      color: 'black'\n    }\n  }, \"Billing Details\"))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"bfname\",\n    placeholder: \"First name *\",\n    id: \"billing_first_name\",\n    required: true,\n    onChange: formik.handleChange,\n    value: formik.values.bfname\n  }))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"blname\",\n    placeholder: \"Last name *\",\n    id: \"billing_last_name\",\n    required: true,\n    onChange: formik.handleChange,\n    value: formik.values.bsname\n  }))), __jsx(Col, {\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"bcname\",\n    placeholder: \"Company Name\",\n    id: \"billing_company_name\",\n    required: true,\n    onChange: formik.handleChange,\n    value: formik.values.bcname\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"baddress1\",\n    placeholder: \"Address *\",\n    id: \"billing_address\",\n    required: true,\n    onChange: formik.handleChange,\n    value: formik.values.baddress1\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"baddress2\",\n    placeholder: \"Address line2\",\n    id: \"billing_address2\",\n    required: true,\n    onChange: formik.handleChange,\n    value: formik.values.baddress2\n  }))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"bcity\",\n    placeholder: \"City / Town *\",\n    id: \"billing_city\",\n    required: true,\n    onChange: formik.handleChange,\n    value: formik.values.bcity\n  }))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"bzipcode\",\n    placeholder: \"Postcode / ZIP *\",\n    id: \"billing_postcode\",\n    required: true,\n    onChange: formik.handleChange,\n    value: formik.values.bzipcode\n  }))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"bphone\",\n    placeholder: \"Phone *\",\n    id: \"billing_phone\",\n    required: true,\n    onChange: formik.handleChange,\n    value: formik.values.bphone\n  }))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"bemail\",\n    placeholder: \"Email address *\",\n    id: \"billing_email\",\n    required: true,\n    onChange: formik.handleChange,\n    value: formik.values.bemail\n  }))), __jsx(Col, {\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: checked,\n    onChange: shippingChange\n  }), \"\\xA0 Shipping Address same as Billing Address\")), checkTag, __jsx(\"div\", {\n    className: \"heading-s1 space-mb--20\"\n  }, __jsx(\"h4\", {\n    style: {\n      color: 'black'\n    }\n  }, \"Additional information\")), __jsx(\"div\", {\n    className: \"form-group mb-0\"\n  }, __jsx(\"textarea\", {\n    rows: \"5\",\n    className: \"form-control\",\n    placeholder: \"Order notes\"\n  })))), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\"\n  }, \"Create\"))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"order-review space-mt-mobile-only--40\"\n  }, __jsx(\"div\", {\n    className: \"heading-s1 space-mb--20\"\n  }, __jsx(\"h4\", {\n    style: {\n      color: 'black'\n    }\n  }, \"Your Orders\")), __jsx(\"div\", {\n    className: \"table-responsive order_table\"\n  }, __jsx(\"table\", {\n    className: \"table\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Product\"), __jsx(\"th\", null, \"Total\"))), __jsx(\"tbody\", null, cartItems.map((product, i) => {\n    // const discountedPrice = getDiscountPrice(\n    //   product.regular_price,\n    //   product.price\n    // ).toFixed(2);\n    const discountedPrice = product.price;\n    cartTotalPrice += discountedPrice * product.quantity;\n    return __jsx(\"tr\", {\n      key: i\n    }, __jsx(\"td\", null, product.name, \" \", __jsx(\"span\", {\n      className: \"product-qty\"\n    }, \"x \", product.quantity)), __jsx(\"td\", null, \"\\xA3\", (discountedPrice * product.quantity).toFixed(2)));\n  })), __jsx(\"tfoot\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"SubTotal\"), __jsx(\"td\", {\n    className: \"product-subtotal\"\n  }, \"\\xA3 \", cartTotalPrice.toFixed(2))), __jsx(\"tr\", null, __jsx(\"th\", null, \"Shipping\"), __jsx(\"td\", null, \"Free Shipping\")), __jsx(\"tr\", null, __jsx(\"th\", null, \"Total\"), __jsx(\"td\", {\n    className: \"product-subtotal\"\n  }, \"\\xA3 \", cartTotalPrice.toFixed(2)))))), __jsx(\"div\", {\n    className: \"payment-method\"\n  }, __jsx(\"div\", {\n    className: \"heading-s1 space-mb--20\"\n  }, __jsx(\"h4\", {\n    style: {\n      color: 'black'\n    }\n  }, \"Payment\")), __jsx(\"div\", {\n    className: \"payment-option space-mb--20\"\n  }, __jsx(\"div\", {\n    className: \"custom-radio space-mb--20\"\n  }, __jsx(\"label\", {\n    className: \"form-check-label\"\n  }, \"Credit / Debit Card\"), __jsx(MyStoreCheckout, null))), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: agreeChecked\n  }), \"\\xA0 I confirm I have read and accept Koala Interiors Limited terms and conditions and \", __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", {\n    style: {\n      color: \"blue\"\n    }\n  }, \"terms and conditions\")), \" returns policy\"))), __jsx(\"button\", {\n    className: \"btn btn-fill-out btn-block\"\n  }, \"Place Order\")))) : __jsx(Row, null, __jsx(Col, null, __jsx(\"div\", {\n    className: \"item-empty-area text-center\"\n  }, __jsx(\"div\", {\n    className: \"item-empty-area__icon space-mb--30\"\n  }, __jsx(IoMdCash, null)), __jsx(\"div\", {\n    className: \"item-empty-area__text\"\n  }, __jsx(\"p\", {\n    className: \"space-mb--30\"\n  }, \"No items found in cart to checkout\"), __jsx(Link, {\n    href: \"/shop/grid-left-sidebar\"\n  }, __jsx(\"a\", {\n    className: \"btn btn-fill-out\"\n  }, \"Shop Now\")))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartData\n  };\n};\n\nexport const getServerSideProps = async () => {\n  const roomMenu = await ProductCategoryFetchCalls(76);\n  const productMenu = await ProductCategoryFetchCalls(17);\n  return {\n    props: {\n      productData: {\n        productMenu,\n        roomMenu\n      }\n    }\n  };\n};\nexport default connect(mapStateToProps)(Checkout);","map":null,"metadata":{},"sourceType":"module"}
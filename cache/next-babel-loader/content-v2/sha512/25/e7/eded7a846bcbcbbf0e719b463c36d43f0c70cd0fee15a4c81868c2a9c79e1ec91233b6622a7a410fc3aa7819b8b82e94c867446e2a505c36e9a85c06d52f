{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Link from \"next/link\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { getDiscountPrice } from \"../../lib/product\";\nimport { IoMdCash } from \"react-icons/io\";\nimport { LayoutOne } from \"../../layouts\";\nimport { BreadcrumbOne } from \"../../components/Breadcrumb\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useRouter } from 'next/router';\nimport { OrderFetchCalls, OrderUpdateCalls } from '../../services/api/fetchCalls/OrderFetchcalls';\nimport { ProductCategoryFetchCalls } from '../../services/api/fetchCalls/ProductFetchCalls';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Elements, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport Loader from \"../../components/Loader/loader\"; // form validation\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst SignupSchema = yup.object().shape({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  company: yup.string().required(),\n  address1: yup.string().required(),\n  address2: yup.string().required(),\n  city: yup.string().required(),\n  postCode: yup.number().required().positive().integer().typeError(\"Please Enter valid post code\"),\n  phone: yup.string().required().min(10).max(10).matches(phoneRegExp, 'Phone number is not valid'),\n  email: yup.string().required().email(),\n  terms: yup.boolean().oneOf([true], \"You must accept the terms and conditions\")\n});\n\nconst CheckoutForm = ({\n  productData,\n  cartItems\n}) => {\n  const {\n    0: loaderAlert,\n    1: setLoaderAlert\n  } = useState(\"\");\n  const {\n    0: agree,\n    1: setAgree\n  } = useState(true);\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  const {\n    0: checkTag,\n    1: setCheckTag\n  } = useState(\"\");\n  let cartTotalPrice = 0;\n  const {\n    0: billingAddress,\n    1: setBillingAddress\n  } = useState({\n    first_name: \"\",\n    last_name: \"\",\n    company: \"\",\n    address1: \"\",\n    address2: \"\",\n    city: \"\",\n    postcode: \"\",\n    phone: \"\"\n  });\n  const {\n    0: shippingAddress,\n    1: setShippingAddress\n  } = useState({\n    sfirst_name: \"\",\n    slast_name: \"\",\n    scompany: \"\",\n    saddress1: \"\",\n    saddress2: \"\",\n    scity: \"\",\n    spostcode: \"\",\n    sphone: \"\"\n  });\n  const {\n    0: address,\n    1: setAddress\n  } = useState({\n    billingAddress,\n    shippingAddress\n  });\n  var orderProducts = [];\n\n  if (cartItems && cartItems.length > 0) {\n    cartItems.map(element => {\n      orderProducts.push({\n        \"product_id\": element.id,\n        \"quantity\": element.quantity\n      });\n    });\n  }\n\n  const shippingChange = () => {\n    if (checked == true) {\n      setChecked(false);\n    } else {\n      setChecked(true);\n    }\n  }; // Form validation\n\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isDirty\n    }\n  } = useForm({\n    resolver: yupResolver(SignupSchema)\n  }); // Form submit\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const onSubmit = async event => {\n    setLoaderAlert(__jsx(Loader, null));\n    var orderData = {\n      \"payment_method\": \"bacs\",\n      \"payment_method_title\": \"Debit Card\",\n      \"set_paid\": false,\n      \"billing\": {\n        \"first_name\": event.firstName,\n        \"last_name\": event.lastName,\n        \"address_1\": event.address1,\n        \"address_2\": event.address2,\n        \"city\": event.city,\n        \"state\": event.city,\n        \"postcode\": event.postCode.toString(),\n        \"country\": \"UK\",\n        \"email\": event.email,\n        \"phone\": event.phone\n      },\n      \"shipping\": {\n        \"first_name\": event.firstName,\n        \"last_name\": event.lastName,\n        \"address_1\": event.address1,\n        \"address_2\": event.address2,\n        \"city\": event.city,\n        \"state\": event.city,\n        \"postcode\": event.postCode.toString(),\n        \"country\": \"UK\"\n      },\n      \"line_items\": orderProducts\n    };\n    console.log(orderData, \"adsfadsfadsf\"); //order place\n\n    await OrderFetchCalls(orderData).then(async data => {\n      console.log(data);\n      const {\n        error,\n        paymentMethod\n      } = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement)\n      });\n\n      if (!error) {\n        const {\n          id\n        } = paymentMethod;\n\n        try {\n          axios.post(\"/api/payment/charge\", {\n            id,\n            amount: parseInt(data.total * 100),\n            description: data.id.toString\n          }).then(async ordered => {\n            await OrderUpdateCalls(data.id, {\n              \"status\": \"completed\"\n            }).then(updated => {\n              alert(\"Payment Sucessfull\");\n              router.push('/other/order-completed');\n              setLoaderAlert(\"\");\n            });\n          }).catch(error => {\n            alert(error, \"error\");\n          });\n        } catch (error) {\n          alert(error, \"error\");\n        }\n      }\n    }, errors => {\n      alert(errors);\n    });\n  };\n\n  useEffect(() => {\n    if (checked == false) {\n      setCheckTag(__jsx(React.Fragment, null, __jsx(\"hr\", null), __jsx(Row, null, __jsx(Col, {\n        md: 12\n      }, __jsx(\"div\", {\n        className: \"heading-s1 space-mb--20\"\n      }, __jsx(\"h4\", {\n        style: {\n          color: 'black'\n        }\n      }, \"Shipping Address\"), \" \")), __jsx(Col, {\n        md: 6\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        name: \"sfname\",\n        placeholder: \"First name *\",\n        id: \"shipping_first_name\"\n      }), \" \")), __jsx(Col, {\n        md: 6\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        name: \"slname\",\n        placeholder: \"Last name *\",\n        id: \"shipping_last_name\"\n      }), \" \")), __jsx(Col, {\n        md: 12\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        required: true,\n        type: \"text\",\n        name: \"scname\",\n        placeholder: \"Company Name\",\n        id: \"shipping_company_name\"\n      }), \" \"), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"saddress1\",\n        required: \"\",\n        placeholder: \"Address *\",\n        id: \"shipping_address\"\n      }), \" \"), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"saddress2\",\n        required: \"\",\n        placeholder: \"Address line2\",\n        id: \"shipping_address2\"\n      }), \" \")), __jsx(Col, {\n        md: 6\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        required: true,\n        type: \"text\",\n        name: \"scity\",\n        placeholder: \"City / Town *\",\n        id: \"shipping_city\"\n      }), \" \")), __jsx(Col, {\n        md: 6\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        required: true,\n        type: \"text\",\n        name: \"szipcode\",\n        placeholder: \"Postcode / ZIP *\",\n        id: \"shipping_postcode\"\n      }), \" \")), __jsx(Col, {\n        md: 6\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        required: true,\n        type: \"text\",\n        name: \"sphone\",\n        placeholder: \"Phone *\",\n        id: \"shipping_phone\"\n      }), \" \")), __jsx(Col, {\n        md: 6\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        required: true,\n        type: \"text\",\n        name: \"semail\",\n        placeholder: \"Email address *\",\n        id: \"shipping_email\"\n      }), \" \")))));\n    } else {\n      setCheckTag(\"\");\n    }\n  }, [checked]);\n  return __jsx(React.Fragment, null, loaderAlert, __jsx(LayoutOne, {\n    productData: productData\n  }, __jsx(\"div\", {\n    className: \"checkout-content space-pt--r70 space-pb--r100\"\n  }, __jsx(Container, null, \" \", cartItems && cartItems.length >= 1 ? __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(Row, null, __jsx(Col, {\n    md: 6\n  }, __jsx(Row, null, __jsx(Col, {\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"heading-s1 space-mb--20\"\n  }, __jsx(\"h4\", {\n    style: {\n      color: 'black'\n    }\n  }, \"Billing Details\"), \" \")), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", _extends({\n    type: \"text\",\n    className: \"form-control\",\n    name: \"firstName\",\n    placeholder: \"First name *\"\n  }, register(\"firstName\"))), errors.firstName && __jsx(\"p\", {\n    className: \"error-message\"\n  }, errors.firstName.message))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", _extends({\n    type: \"text\",\n    className: \"form-control\",\n    name: \"lastName\",\n    placeholder: \"Last name *\",\n    id: \"billing_last_name\"\n  }, register(\"lastName\"))), errors.lastName && __jsx(\"p\", {\n    className: \"error-message\"\n  }, errors.lastName.message))), __jsx(Col, {\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", _extends({\n    className: \"form-control\",\n    type: \"text\",\n    name: \"company\",\n    placeholder: \"Company Name\",\n    id: \"billing_company_name\"\n  }, register(\"company\"))), errors.company && __jsx(\"p\", {\n    className: \"error-message\"\n  }, errors.company.message)), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", _extends({\n    type: \"text\",\n    className: \"form-control\",\n    name: \"address1\",\n    placeholder: \"Address *\",\n    id: \"billing_address\"\n  }, register(\"address1\"))), errors.address1 && __jsx(\"p\", {\n    className: \"error-message\"\n  }, errors.address1.message)), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", _extends({\n    type: \"text\",\n    className: \"form-control\",\n    name: \"address2\",\n    placeholder: \"Address line2\",\n    id: \"billing_address2\"\n  }, register(\"address2\"))), errors.company && __jsx(\"p\", {\n    className: \"error-message\"\n  }, errors.company.message))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", _extends({\n    className: \"form-control\",\n    type: \"text\",\n    name: \"city\",\n    placeholder: \"City / Town *\",\n    id: \"billing_city\"\n  }, register(\"city\"))), errors.city && __jsx(\"p\", {\n    className: \"error-message\"\n  }, errors.city.message))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", _extends({\n    className: \"form-control\",\n    type: \"text\",\n    name: \"postCode\",\n    placeholder: \"Postcode / ZIP *\",\n    id: \"billing_postcode\"\n  }, register(\"postCode\"))), errors.postCode && __jsx(\"p\", {\n    className: \"error-message\"\n  }, errors.postCode.message))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", _extends({\n    className: \"form-control\",\n    type: \"text\",\n    name: \"phone\",\n    placeholder: \"Phone *\",\n    id: \"billing_phone\"\n  }, register(\"phone\"))), errors.phone && __jsx(\"p\", {\n    className: \"error-message\"\n  }, errors.phone.message))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", _extends({\n    className: \"form-control\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email address *\",\n    id: \"billing_email\"\n  }, register(\"email\"))), errors.email && __jsx(\"p\", {\n    className: \"error-message\"\n  }, errors.email.message))), __jsx(Col, {\n    md: 12\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: checked,\n    onChange: shippingChange\n  }), \"\\xA0 Shipping Address same as Billing Address\")), __jsx(\"div\", {\n    className: \"heading-s1 space-mb--20\"\n  }, __jsx(\"h4\", {\n    style: {\n      color: 'black'\n    }\n  }, \"Additional information\"), \" \"), __jsx(\"div\", {\n    className: \"form-group mb-0\"\n  }, __jsx(\"textarea\", {\n    rows: \"5\",\n    className: \"form-control\",\n    placeholder: \"Order notes\"\n  }))))), __jsx(Col, {\n    md: 6\n  }, __jsx(\"div\", {\n    className: \"order-review space-mt-mobile-only--40\"\n  }, __jsx(\"div\", {\n    className: \"heading-s1 space-mb--20\"\n  }, __jsx(\"h4\", {\n    style: {\n      color: 'black'\n    }\n  }, \"Your Orders\"), \" \"), __jsx(\"div\", {\n    className: \"table-responsive order_table\"\n  }, __jsx(\"table\", {\n    className: \"table\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Product\"), __jsx(\"th\", null, \"Total\"))), __jsx(\"tbody\", null, cartItems.map((product, i) => {\n    const discountedPrice = product.price;\n    cartTotalPrice += discountedPrice * product.quantity;\n    return __jsx(\"tr\", {\n      key: i\n    }, __jsx(\"td\", null, \" \", product.name, \" \", __jsx(\"span\", {\n      className: \"product-qty\"\n    }, \"x \", product.quantity)), __jsx(\"td\", null, \" \\xA3 \", (discountedPrice * product.quantity).toFixed(2), \" \"));\n  })), __jsx(\"tfoot\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"SubTotal\"), __jsx(\"td\", {\n    className: \"product-subtotal\"\n  }, \" \\xA3 \", cartTotalPrice.toFixed(2), \" \")), __jsx(\"tr\", null, __jsx(\"th\", null, \"Shipping\"), __jsx(\"td\", null, \"Free Shipping\")), __jsx(\"tr\", null, __jsx(\"th\", null, \"Total\"), __jsx(\"td\", {\n    className: \"product-subtotal\"\n  }, \" \\xA3 \", cartTotalPrice.toFixed(2), \" \"))))), __jsx(\"div\", {\n    className: \"payment-method\"\n  }, __jsx(\"div\", {\n    className: \"heading-s1 space-mb--20\"\n  }, __jsx(\"h4\", {\n    style: {\n      color: 'black'\n    }\n  }, \"Payment\")), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(CardElement, {\n    options: {\n      style: {\n        base: {\n          fontSize: '20px',\n          color: '#424770',\n          '::placeholder': {\n            color: '#aab7c4'\n          }\n        },\n        invalid: {\n          color: '#9e2146'\n        }\n      }\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, __jsx(\"input\", _extends({\n    type: \"checkbox\",\n    name: \"terms\"\n  }, register(\"terms\"), {\n    onChange: () => {\n      setAgree(false);\n    }\n  })), \"\\xA0 I confirm I have read and accept Koala Interiors Limited terms and conditions and\", __jsx(Link, {\n    href: \"/static/terms\"\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    style: {\n      color: \"blue\"\n    }\n  }, \"terms and conditions\")), \" returns policy\"), errors.terms && __jsx(\"p\", {\n    className: \"error-message\"\n  }, errors.terms.message))), __jsx(\"button\", {\n    disabled: !stripe,\n    className: \"btn btn-fill-out btn-block\",\n    type: \"submit\"\n  }, \" Place Order \"))))) : __jsx(Row, null, __jsx(Col, null, __jsx(\"div\", {\n    className: \"item-empty-area text-center\"\n  }, __jsx(\"div\", {\n    className: \"item-empty-area__icon space-mb--30\"\n  }, __jsx(IoMdCash, null), \" \"), __jsx(\"div\", {\n    className: \"item-empty-area__text\"\n  }, __jsx(\"p\", {\n    className: \"space-mb--30\"\n  }, \" No items found in cart to checkout \"), __jsx(Link, {\n    href: \"/shop/shop-by-product\"\n  }, \" \", __jsx(\"a\", {\n    className: \"btn btn-fill-out\"\n  }, \"Shop Now\"), \" \")))))))));\n};\n\nconst stripePromise = loadStripe(\"pk_test_51IQXdrDbGNdhZzB0FBALDBzViafiz3A99smpVcoD4BSKGdm6XFM9vqrbN3NLhy2KGaKA79dLV8srZB9WDVoRGeY700VyS5E8MF\");\n\nconst checkout2 = ({\n  productData,\n  cartItems\n}) => {\n  return __jsx(Elements, {\n    stripe: stripePromise\n  }, __jsx(CheckoutForm, {\n    productData: productData,\n    cartItems: cartItems\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartData\n  };\n};\n\nexport const getServerSideProps = async () => {\n  const roomMenu = await ProductCategoryFetchCalls(76);\n  const productMenu = await ProductCategoryFetchCalls(17);\n  return {\n    props: {\n      productData: {\n        productMenu,\n        roomMenu\n      }\n    }\n  };\n};\nexport default connect(mapStateToProps)(checkout2);","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { OrderFetchCalls, OrderUpdateCalls } from '../../services/api/fetchCalls/OrderFetchcalls';\n\nconst CheckoutForm = ({\n  address,\n  orderProducts\n}) => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    var data = {\n      \"payment_method\": \"bacs\",\n      \"payment_method_title\": \"Debit Card\",\n      \"set_paid\": false,\n      \"shipping\": address,\n      \"billing\": address,\n      \"line_items\": orderProducts\n    }; //order place\n\n    await OrderFetchCalls(data).then(async data => {\n      const {\n        error,\n        paymentMethod\n      } = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement)\n      });\n\n      if (!error) {\n        const {\n          id\n        } = paymentMethod;\n\n        try {\n          console.log(data, \"paymentmethod\");\n          var description = data.line_items.map(item => {\n            return item.name;\n          });\n          axios.post(\"/api/payment/charge\", {\n            id,\n            amount: parseInt(data.total * 100),\n            description: description.toString()\n          }).then(async ordered => {\n            await OrderUpdateCalls(data.id, {\n              \"status\": \"completed\"\n            }).then(updated => {\n              console.log(updated, \"updated data\");\n            });\n          }).catch(error => {\n            console.log(error, \"error\");\n          });\n        } catch (error) {\n          console.log(error, \"error\");\n        }\n      }\n    }, errors => {\n      alert(errors);\n    });\n  };\n\n  const {\n    0: agree,\n    1: setAgree\n  } = useState(true);\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(CardElement, null), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, __jsx(\"input\", {\n    type: \"checkbox\",\n    onChange: () => {\n      setAgree(false);\n    }\n  }), \"\\xA0 I confirm I have read and accept Koala Interiors Limited terms and conditions and \", __jsx(Link, {\n    href: \"#\"\n  }, __jsx(\"a\", {\n    style: {\n      color: \"blue\"\n    }\n  }, \"terms and conditions\")), \" returns policy\")), __jsx(\"button\", {\n    disabled: agree,\n    className: \"btn btn-fill-out btn-block\"\n  }, \"Place Order\"));\n};\n\nconst stripePromise = loadStripe(\"pk_test_51IQXdrDbGNdhZzB0FBALDBzViafiz3A99smpVcoD4BSKGdm6XFM9vqrbN3NLhy2KGaKA79dLV8srZB9WDVoRGeY700VyS5E8MF\");\n\nconst MyStoreCheckout = ({\n  address,\n  orderProducts\n}) => {\n  return __jsx(Elements, {\n    stripe: stripePromise\n  }, __jsx(CheckoutForm, {\n    address: address,\n    orderProducts: orderProducts\n  }));\n};\n\nexport default MyStoreCheckout;","map":null,"metadata":{},"sourceType":"module"}